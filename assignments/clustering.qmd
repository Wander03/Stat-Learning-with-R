---
title: "Lab 6: Clustering and PCA"
author: "Andrew Kerr"
format: 
  html:
    code-fold: false
    code-line-numbers: true
    code-tools: true
    self-contained: true
editor: visual
execute:
  message: false
  eval: false
---

# Setup

```{r}
#| label: libraries-r
#| include: false
library(tidyverse)
library(tidymodels)
library(glmnet)
library(discrim)
library(rpart)
library(rpart.plot)
library(baguette)
```

# Dataset: Spotify Song Attributes

This week's dataset was assembled from the Spotify API by a Cal Poly graduate. You can find the full data on Kaggle here: <https://www.kaggle.com/danield2255/data-on-songs-from-billboard-19992019>

We will work with only a subset of the `songAttributes_1999-2019.csv` dataset from that Kaggle site. You will need to refer to the Kaggle documentation for specific information about what each variable means.

Run the following code to read the data and convert it to scaled matrix form:

```{r}
#| message: false

songs <- read_csv("https://www.dropbox.com/s/hijzbof7nnche09/top_artists_spotify-no_labels.csv?dl=1")

songs_matrix <- as.matrix(songs) %>% 
  scale()
```

This dataset contains measurements of various musical / acoustic attributes for songs released between 1999 and 2019. The songs are by 14 unique popular artists, with 100 songs per artist in the dataset.

# Part One: PCA + K-means

## K-means without PCA

**Question 1** -- Apply the K-means clustering algorithm to the data, with k = 3, k = 5, and k = 7.

**Question 2** -- Which of these do you think is the best clustering choice? Make an argument based on the *sum of squared distances* between and within clusters.

## PCA

**Question 3** -- Perform a Principal Components Analysis on this data.

**Question 4** -- Which variables best spread the data?

**Question 5** -- How many PCs would we need to use to recover 80% of the total variance in the data? 90%?

**Question 6** -- Craft a "real-world" interpretation of the first two Principal Components. (For example, in our practice data, we might have said "The first component measure Type, and the second component measures"Blueberryness".)

**Question 7** -- Plot the observations in the first two PCs

## K-means plus PCA

**Question 8** -- Make a choice for how many PCs to use, based on the results of Q5.

**Question 9** -- Apply K-means using those dimensions only.

**Question 10** -- Try a few values of k, and make an argument for the best one.

## Plotting the Results

**Question 11** -- Plot the observations in the first two PCs, and color them by their assigned clusters in Q3.

## Interpreting the Results

**Question 12** -- Does this clustering seem to be capturing real structure?

**Question 13** -- Run the code below (using your own k-means result object) to find the average values of each variable in each cluster.

```{r}
songs %>%
  mutate(
    cluster = km$cluster
  ) %>%
  group_by(cluster) %>%
  summarize(
    across(.cols = Acousticness:Valence, 
           .fns = ~ mean(.x)
           )
    )
```

What real-world qualities do you think define each cluster?

(For example, you might say, "The songs in cluster 1 all have high speechiness, and low instrumentalness, so they might be rap.)

# Part Two: Hierarchical Clustering

## Dendrogram

**Question 14** -- Perform a hierarchical clustering on the songs data, and plot the dendrogram.

## Cluster Assignments

**Question 15** -- Choose a cutoff for the dendrogram, and justify your choice.

**Question 16** -- Produce the cluster assignments for each song based on that cutoff.

## Interpreting the Results

**Question 17** -- Use the same code as in Q13 to examine your resulting clusters and interpret them.

# Part Three: Verification

Now, use the following code to load the name, artist, and album of each song. (This data is in the same order as your original `songs` and `songs_matrix` data, of course.)

```{r}
songs_full <- read_csv("https://www.dropbox.com/s/5ke5fi3hlu0f02w/top_artists_spotify.csv?dl=1")
```

Use the following code to see which artists were in which cluster:

```{r}
songs_full %>%
  mutate(
    cluster = km$cluster
  ) %>%
  count(cluster, Artist)
```

Refer back to your cluster interpretations at the end of Parts One (Q13) and Two (Q17). Did they turn out to be correct? That is, do the styles of the artists that are most represented in a particular cluster seem to match your predictions?
